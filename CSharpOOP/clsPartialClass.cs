using System;

namespace CSharpOOP
{
    internal class clsPartialClass
    {
        public partial class MyClass
        {
            public void Method1()
            {
                Console.WriteLine("Method 1 is called.");
            }
        }
        public partial class MyClass
        {
            public void Method2()
            {
                Console.WriteLine("Method 2 is called.");
            }
        }
        internal static void PartialClassesEx()
        {
            //Places where partial class can be used:
            //--------------------------------------
            //While working on a larger projects with more than one developer,
            //it helps the developers to work on the same class simultaneously.
            //Codes can be added or modified to the class without re-creating source files
            //which are automatically generated by the IDE(i.e.Visual Studio).
            //-----------------------------------------------------------------------------    
            //-----------------------------------------------------------------------------    
            //If any part is declared abstract, then the whole type is considered abstract.
            //-----------------------------------------------------------------------------    
            //If any part is declared sealed, then the whole type is considered sealed.
            //-----------------------------------------------------------------------------    
            //If any part declares a base type, then the whole type inherits that class.
            //-----------------------------------------------------------------------------    
            //Any class member declared in a partial definition are available to all other parts.
            //-----------------------------------------------------------------------------    
            //All parts of a partial class should be in the same namespace.
            //-----------------------------------------------------------------------------    
            //All the parts must have same access modifier i.e. private, public, or so on.
            //-----------------------------------------------------------------------------
            //-----------------------------------------------------------------------------

            //the code of MyClass is seperated in 2 files class1.cs and class2.cs
            MyClass obj = new MyClass();
            obj.Method1();
            obj.Method2();


        }
    }
}